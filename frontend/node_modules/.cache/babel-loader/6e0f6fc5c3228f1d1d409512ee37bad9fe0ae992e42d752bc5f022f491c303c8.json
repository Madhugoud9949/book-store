{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhu goud\\\\Desktop\\\\nxtwave\\\\bookstore\\\\frontend\\\\src\\\\context\\\\ItemContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport './s';\n// Create item context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemContext = /*#__PURE__*/createContext();\n\n// Custom provider component\nfunction CustomItemContext({\n  children\n}) {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [itemsInCart, setItemsInCart] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  // Fetch products from the backend\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/api/books\");\n      const products = await response.json();\n      setProducts(products);\n    };\n    fetchData();\n  }, []);\n\n  // Load cart state from local storage on initial render\n  useEffect(() => {\n    const savedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n    setCart(savedCart);\n    setItemsInCart(savedCart.length);\n    setTotalPrice(savedCart.reduce((total, item) => total + item.price, 0));\n  }, []);\n\n  // Save cart state to local storage\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n  const addToCart = product => {\n    setTotalPrice(totalPrice + product.price);\n    setCart([...cart, product]);\n    setItemsInCart(itemsInCart + 1);\n    alert(`Added ${product.title} to the cart!`);\n  };\n  const removeFromCart = product => {\n    const index = cart.findIndex(prdt => prdt._id === product._id);\n    if (index !== -1) {\n      const updatedCart = [...cart];\n      updatedCart.splice(index, 1);\n      setTotalPrice(totalPrice - cart[index].price);\n      setCart(updatedCart);\n      setItemsInCart(itemsInCart - 1);\n      alert(`Removed ${product.title} from the cart!`);\n    } else {\n      console.log(\"Item not found in the cart\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(itemContext.Provider, {\n    value: {\n      products,\n      addToCart,\n      removeFromCart,\n      itemsInCart,\n      totalPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(CustomItemContext, \"5+sqfJMJOMw8A4vyl3wBjFSKQ80=\");\n_c = CustomItemContext;\nexport { itemContext };\nexport default CustomItemContext;\nvar _c;\n$RefreshReg$(_c, \"CustomItemContext\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","itemContext","CustomItemContext","children","_s","products","setProducts","cart","setCart","itemsInCart","setItemsInCart","totalPrice","setTotalPrice","fetchData","response","fetch","json","savedCart","JSON","parse","localStorage","getItem","length","reduce","total","item","price","setItem","stringify","addToCart","product","alert","title","removeFromCart","index","findIndex","prdt","_id","updatedCart","splice","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/madhu goud/Desktop/nxtwave/bookstore/frontend/src/context/ItemContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport './s'\r\n// Create item context\r\nconst itemContext = createContext();\r\n\r\n// Custom provider component\r\nfunction CustomItemContext({ children }) {\r\n    const [products, setProducts] = useState([]);\r\n    const [cart, setCart] = useState([]);\r\n    const [itemsInCart, setItemsInCart] = useState(0);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n    // Fetch products from the backend\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await fetch(\"http://localhost:5000/api/books\");\r\n            const products = await response.json();\r\n            setProducts(products);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Load cart state from local storage on initial render\r\n    useEffect(() => {\r\n        const savedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n        setCart(savedCart);\r\n        setItemsInCart(savedCart.length);\r\n        setTotalPrice(savedCart.reduce((total, item) => total + item.price, 0));\r\n    }, []);\r\n\r\n    // Save cart state to local storage\r\n    useEffect(() => {\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    }, [cart]);\r\n\r\n    const addToCart = (product) => {\r\n        setTotalPrice(totalPrice + product.price);\r\n        setCart([...cart, product]);\r\n        setItemsInCart(itemsInCart + 1);\r\n        alert(`Added ${product.title} to the cart!`);\r\n    };\r\n\r\n    const removeFromCart = (product) => {\r\n        const index = cart.findIndex((prdt) => prdt._id === product._id);\r\n\r\n        if (index !== -1) {\r\n            const updatedCart = [...cart];\r\n            updatedCart.splice(index, 1);\r\n            setTotalPrice(totalPrice - cart[index].price);\r\n            setCart(updatedCart);\r\n            setItemsInCart(itemsInCart - 1);\r\n            alert(`Removed ${product.title} from the cart!`);\r\n        } else {\r\n            console.log(\"Item not found in the cart\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <itemContext.Provider\r\n            value={{\r\n                products,\r\n                addToCart,\r\n                removeFromCart,\r\n                itemsInCart,\r\n                totalPrice,\r\n            }}\r\n        >\r\n            {children}\r\n        </itemContext.Provider>\r\n    );\r\n}\r\n\r\nexport { itemContext };\r\nexport default CustomItemContext;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAK;AACZ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,SAASM,iBAAiBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,MAAMV,QAAQ,GAAG,MAAMS,QAAQ,CAACE,IAAI,CAAC,CAAC;MACtCV,WAAW,CAACD,QAAQ,CAAC;IACzB,CAAC;IAEDQ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhB,SAAS,CAAC,MAAM;IACZ,MAAMoB,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;IAChEb,OAAO,CAACS,SAAS,CAAC;IAClBP,cAAc,CAACO,SAAS,CAACK,MAAM,CAAC;IAChCV,aAAa,CAACK,SAAS,CAACM,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC,CAAC;EAC3E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA7B,SAAS,CAAC,MAAM;IACZuB,YAAY,CAACO,OAAO,CAAC,MAAM,EAAET,IAAI,CAACU,SAAS,CAACrB,IAAI,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMsB,SAAS,GAAIC,OAAO,IAAK;IAC3BlB,aAAa,CAACD,UAAU,GAAGmB,OAAO,CAACJ,KAAK,CAAC;IACzClB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEuB,OAAO,CAAC,CAAC;IAC3BpB,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IAC/BsB,KAAK,CAAE,SAAQD,OAAO,CAACE,KAAM,eAAc,CAAC;EAChD,CAAC;EAED,MAAMC,cAAc,GAAIH,OAAO,IAAK;IAChC,MAAMI,KAAK,GAAG3B,IAAI,CAAC4B,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKP,OAAO,CAACO,GAAG,CAAC;IAEhE,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;MACd,MAAMI,WAAW,GAAG,CAAC,GAAG/B,IAAI,CAAC;MAC7B+B,WAAW,CAACC,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;MAC5BtB,aAAa,CAACD,UAAU,GAAGJ,IAAI,CAAC2B,KAAK,CAAC,CAACR,KAAK,CAAC;MAC7ClB,OAAO,CAAC8B,WAAW,CAAC;MACpB5B,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;MAC/BsB,KAAK,CAAE,WAAUD,OAAO,CAACE,KAAM,iBAAgB,CAAC;IACpD,CAAC,MAAM;MACHQ,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC7C;EACJ,CAAC;EAED,oBACIzC,OAAA,CAACC,WAAW,CAACyC,QAAQ;IACjBC,KAAK,EAAE;MACHtC,QAAQ;MACRwB,SAAS;MACTI,cAAc;MACdxB,WAAW;MACXE;IACJ,CAAE;IAAAR,QAAA,EAEDA;EAAQ;IAAAyC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAAC3C,EAAA,CAjEQF,iBAAiB;AAAA8C,EAAA,GAAjB9C,iBAAiB;AAmE1B,SAASD,WAAW;AACpB,eAAeC,iBAAiB;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}